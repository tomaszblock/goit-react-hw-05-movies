{"version":3,"file":"static/js/189.80ad8ee7.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0318c5b31af678749f79ee66273e19f0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = () => api.get('/trending/movie/day');\nexport const searchMovies = query =>\n  api.get('/search/movie', { params: { query } });\nexport const getMovieDetails = id => api.get(`/movie/${id}`);\nexport const getMovieCredits = id => api.get(`/movie/${id}/credits`);\nexport const getMovieReviews = id => api.get(`/movie/${id}/reviews`);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../Api/Api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(response => setCast(response.data.cast));\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.cast_id}>\n            {actor.name} as {actor.character}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../Api/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(response =>\n      setReviews(response.data.results)\n    );\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, Route, Routes } from 'react-router-dom';\nimport { getMovieDetails } from '../Api/Api';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(response => setMovie(response.data));\n  }, [movieId]);\n\n  if (!movie) return <p>Loading...</p>;\n\n  return (\n    <div>\n      <h1>{movie.title}</h1>\n      <p>{movie.overview}</p>\n      <Link to={`cast`}>Cast</Link>\n      <Link to={`reviews`}>Reviews</Link>\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["api","axios","baseURL","params","api_key","getTrendingMovies","get","searchMovies","query","getMovieDetails","id","concat","getMovieCredits","getMovieReviews","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","then","response","data","_jsxs","children","_jsx","map","actor","name","character","cast_id","reviews","setReviews","results","review","author","content","movie","setMovie","title","overview","Link","to","Routes","Route","path","element","Cast","Reviews"],"sourceRoot":""}